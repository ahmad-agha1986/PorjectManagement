
@model PaginationViewModel<Task1>

<head>
    <link rel="stylesheet" href="~/css/Task/TasksWithoutUsers.css" />
</head>



<div class="position-fixed top-0 start-0 mt-5 ms-3">
    <a class="btn btn-primary btn-sm" href="@Url.Action("AdminPage", "Account")">Admin Page</a>
</div>

<div class="position-fixed top-0 end-0 mt-5 me-3">
    <a class="btn btn-primary btn-sm" href="@Url.Action("CreateTask", "Tasks")">Create Task </a>
</div>

<div class="d-flex justify-content-center">
<div class="search-container">
    <form method="get" action="@Url.Action("TasksWithoutUsers")" class="form-inline mb-3">
        <div class="input-group">
            <input type="search" name="searchTerm" class="form-control form-control-sm" placeholder="Search by Id or Status">
            <div class="input-group-append">
                <button type="submit" class="btn btn-primary my-2 my-sm-0 search-button">Search</button>
            </div>
        </div>
    </form>
    </div>
</div>


@if (Model.Items.Any())
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>
                <th>Task Id</th>
                <th>Task Name</th>
                <th>Start Date</th>
                <th>End Date</th>
                <th>Status</th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var task in Model.Items)
            {
                <tr>
                    <td>@task.Task_Id</td>
                    <td>@task.Name</td>
                    <td>@task.StartDate?.ToShortDateString()</td>
                    <td>@task.EndDate?.ToShortDateString()</td>
                    <td>@task.Status</td>
                    <td class ="button-cell">
                        @if (task.Status == "Unassigned" || task.Status == null)
                        {
                            <a class="btn btn-primary" asp-controller="Tasks" asp-action="AssignUser1" asp-route-id="@task.Task_Id" asp-route-page="@Model.PageIndex">Assign User  </a>
                            <a class="btn btn-primary delete-button" asp-controller="Tasks" asp-action="DeleteTask" asp-route-taskId="@task.Task_Id" asp-route-page="@Model.PageIndex">Delete Task</a>

                        }
                        else if (task.Status == "InProgress" || task.Status == null)
                        {
                            <a class="btn-unassign btn-primary" asp-controller="Tasks" asp-action="UnassignUser" asp-route-taskId="@task.Task_Id" asp-route-userId="@task.User.User_Id" asp-route-page="@Model.PageIndex">Unassign User</a>
                            <a class="btn btn-primary delete-button" asp-controller="Tasks" asp-action="DeleteTask" asp-route-taskId="@task.Task_Id" asp-route-page="@Model.PageIndex">Delete Task</a>
                        }
                        else if (task.Status == "Complete" || task.Status == null)
                        {
                            <a class="btn btn-primary" asp-controller="Tasks" asp-action="AssignUser1" asp-route-id="@task.Task_Id" asp-route-page="@Model.PageIndex">Assign User</a>

                            <a class="btn btn-primary delete-button" asp-controller="Tasks" asp-action="DeleteTask" asp-route-taskId="@task.Task_Id" asp-route-page="@Model.PageIndex">Delete Task</a>
                        }
                       
                      
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination">
            @{
                var currentPage = Model.PageIndex;
                var totalPages = Model.TotalPages;
            }

            @if (totalPages > 1)
            {
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("TasksWithoutUsers", new { page = currentPage - 1 })">Previous</a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <a class="page-link" href="@Url.Action("TasksWithoutUsers", new { page = i })">@i</a>
                    </li>
                }

                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("TasksWithoutUsers", new { page = currentPage + 1 })">Next</a>
                </li>
            }
        </ul>
    </nav>


   
}
else
{
    <p>No tasks found without users.</p>
}






